# Configuration properties for ABRAID-MP.
# Copyright (c) 2014 University of Oxford

abraid.base.dir=${user.home}/ABRAID-MP
abraid.raster.dir=${abraid.base.dir}/results/rasters

max.days.for.occurrences.on.validator=7
days.between.model.runs=7

#--------------------------------------------------------------------------------
# Database
#--------------------------------------------------------------------------------

# The Postgres server and database name, in the format
# jdbc:postgresql://SERVER_NAME:PORT_NAME/DATABASE_NAME
jdbc.url=jdbc:postgresql://localhost:5432/abraid_mp

# The name of the database user that is used to connect to the database by the
# application
jdbc.username=abraid_mp_application

# The password for the above username
jdbc.password=tessella


#--------------------------------------------------------------------------------
# Database: properties that normally do not change
#--------------------------------------------------------------------------------

# The JDBC driver used to interact with a Postgres database
jdbc.driverClassName=org.postgresql.Driver

# The Hibernate dialect used to interact with a Postgres database
hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect

# For debugging: when set to "true", the SQL that Hibernate generates appears in
# the log file
hibernate.show_sql=false

# Connection pooling: number of connections acquired when the pool is exhausted
c3p0.acquireIncrement=3

# Connection pooling: number of connections acquired on startup
c3p0.initialPoolSize=3

# Connection pooling: minimum number of connections in the pool
c3p0.minPoolSize=3

# Connection pooling: maximum number of connections in the pool
c3p0.maxPoolSize=15

# Connection pooling: maximum connection idle time (seconds) before being automatically closed (0 = never close)
c3p0.maxIdleTime=7200

# Connection pooling: keep connections alive by performing a simple query upon checking into the pool (asynchronously)
c3p0.testConnectionOnCheckin=true

# Connection pooling: keep connections alive by performing a simple query upon checking out of the pool (NB this
# strategy has high reliability but there is a delay before returning to the client)
c3p0.testConnectionOnCheckout=false

# Connection pooling: keep connections alive by performing a simple query every n seconds if the connection is idle
c3p0.idleConnectionTestPeriod=300


#--------------------------------------------------------------------------------
# Web service properties
#--------------------------------------------------------------------------------

# When connecting to a web service, this is the number of milliseconds that the
# application will wait before returning an error
webserviceclient.connectTimeoutMilliseconds=180000

# When reading from a web service, this is the number of milliseconds that the
# application will wait before returning an error
webserviceclient.readTimeoutMilliseconds=180000

# This is the configuration for the URL for the ModelOutputHandler service. It should be replaced in production.
# For security, HTTPS must be used in production (as we are using HTTP Basic Auth). A new api key should also be generated.
local.model.wrapper.api.key=key-to-access-model-wrapper
local.model.wrapper.protocol=http
local.model.wrapper.host=localhost
local.model.wrapper.port=8080
local.model.wrapper.path=/modelwrapper
local.model.wrapper.root.url=${local.model.wrapper.protocol}://api:${local.model.wrapper.api.key}@${local.model.wrapper.host}:${local.model.wrapper.port}${local.model.wrapper.path}

model.wrapper.instance.list=${local.model.wrapper.root.url}

# This is the configuration for the URL for the GeoServer service. It should be replaced in production.
geoserver.protocol=http
geoserver.username=admin
geoserver.password=tessella
geoserver.host=localhost:8081
geoserver.path=/geoserver
geoserver.root.url=${geoserver.protocol}://${geoserver.username}:${geoserver.password}@${geoserver.host}${geoserver.path}

machinelearning.host=localhost:5000
machinelearning.path=/

machinelearning.root.url=http://${machinelearning.host}${machinelearning.path}

#--------------------------------------------------------------------------------
# Email properties
#--------------------------------------------------------------------------------
# Warning: these properties are duplicated in each (4) log4j.properties file.
email.smtp.host=mailtrap.io
email.smtp.port=2525
email.smtp.ssl=false
email.smtp.username=235398130c23105ca
email.smtp.password=b69aea70436f30
email.from.address=test_sender@email.com
email.default.to.address=test_recipient@email.com


# Configuration properties for ABRAID-MP.
# Copyright (c) 2014 University of Oxford

#--------------------------------------------------------------------------------
# Database
#--------------------------------------------------------------------------------

# The Postgres server and database name, in the format
# jdbc:postgresql://SERVER_NAME:PORT_NAME/DATABASE_NAME
jdbc.database.host=localhost
jdbc.database.port=5432
jdbc.database.name=abraid_mp
jdbc.url=jdbc:postgresql://${jdbc.database.host}:${jdbc.database.port}/${jdbc.database.name}

# The name of the database user that is used to connect to the database by the
# application
jdbc.username=abraid_mp_application

# The password for the above username
jdbc.password=tessella


#--------------------------------------------------------------------------------
# Database: properties that normally do not change
#--------------------------------------------------------------------------------

# The JDBC driver used to interact with a Postgres database
jdbc.driverClassName=org.postgresql.Driver

# The Hibernate dialect used to interact with a Postgres database
hibernate.dialect=org.hibernate.spatial.dialect.postgis.PostgisDialect

# For debugging: when set to "true", the SQL that Hibernate generates appears in
# the log file
hibernate.show_sql=false

# Connection pooling: number of connections acquired when the pool is exhausted
c3p0.acquireIncrement=3

# Connection pooling: number of connections acquired on startup
c3p0.initialPoolSize=3

# Connection pooling: minimum number of connections in the pool
c3p0.minPoolSize=3

# Connection pooling: maximum number of connections in the pool
c3p0.maxPoolSize=15

# Connection pooling: maximum connection idle time (seconds) before being automatically closed (0 = never close)
c3p0.maxIdleTime=7200

# Connection pooling: keep connections alive by performing a simple query upon checking into the pool (asynchronously)
c3p0.testConnectionOnCheckin=true

# Connection pooling: keep connections alive by performing a simple query upon checking out of the pool (NB this
# strategy has high reliability but there is a delay before returning to the client)
c3p0.testConnectionOnCheckout=false

# Connection pooling: keep connections alive by performing a simple query every n seconds if the connection is idle
c3p0.idleConnectionTestPeriod=300

<?xml version="1.0" encoding="UTF-8"?>
<project name="module_diseaseextent" default="compile.module.diseaseextent">
  <dirname property="module.diseaseextent.basedir" file="${ant.file.module_diseaseextent}"/>
  
  <property name="module.jdk.home.diseaseextent" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.diseaseextent" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.diseaseextent" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.diseaseextent" value="${compiler.args}"/>
  
  <property name="diseaseextent.output.dir" value="${module.diseaseextent.basedir}/../../out/production"/>
  <property name="diseaseextent.testoutput.dir" value="${module.diseaseextent.basedir}/../../out/test"/>
  
  <path id="diseaseextent.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
    <fileset dir="${module.diseaseextent.basedir}/../../lib">
      <include name="*.jar"/>
    </fileset>
    <pathelement path="${module.diseaseextent.basedir}/../../out"/>
  </path>
  
  <path id="diseaseextent.module.production.classpath"/>
  
  <path id="diseaseextent.runtime.production.module.classpath"/>
  
  <path id="diseaseextent.module.classpath"/>
  
  <path id="diseaseextent.runtime.module.classpath"/>
  
  
  <patternset id="excluded.from.module.diseaseextent">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.diseaseextent">
    <patternset refid="excluded.from.module.diseaseextent"/>
  </patternset>
  
  <path id="diseaseextent.module.sourcepath">
    <dirset dir="${module.diseaseextent.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="diseaseextent.module.test.sourcepath">
    <dirset dir="${module.diseaseextent.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.diseaseextent" depends="compile.module.diseaseextent.production,compile.module.diseaseextent.tests" description="Compile module DiseaseExtent"/>
  
  <target name="compile.module.diseaseextent.production" description="Compile module DiseaseExtent; production classes">
    <mkdir dir="${diseaseextent.output.dir}"/>
    <javac destdir="${diseaseextent.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
      <compilerarg line="${compiler.args.diseaseextent}"/>
      <bootclasspath refid="diseaseextent.module.bootclasspath"/>
      <classpath refid="diseaseextent.module.production.classpath"/>
      <src refid="diseaseextent.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.diseaseextent"/>
    </javac>
    
    <copy todir="${diseaseextent.output.dir}">
      <fileset dir="${module.diseaseextent.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.diseaseextent.tests" depends="compile.module.diseaseextent.production" description="compile module DiseaseExtent; test classes" unless="skip.tests">
    <mkdir dir="${diseaseextent.testoutput.dir}"/>
    <javac destdir="${diseaseextent.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
      <compilerarg line="${compiler.args.diseaseextent}"/>
      <bootclasspath refid="diseaseextent.module.bootclasspath"/>
      <classpath refid="diseaseextent.module.classpath"/>
      <src refid="diseaseextent.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.diseaseextent"/>
    </javac>
    
    <copy todir="${diseaseextent.testoutput.dir}">
      <fileset dir="${module.diseaseextent.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.diseaseextent" description="cleanup module">
    <delete dir="${diseaseextent.output.dir}"/>
    <delete dir="${diseaseextent.testoutput.dir}"/>
  </target>
</project>
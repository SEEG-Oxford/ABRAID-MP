# Configuration properties for the ABRAID-MP model wrapper.
# Copyright (c) 2014 University of Oxford

# Uncomment this to specify a cache directory
# By default /var/lib/abraid/modelwrapper or %LOCALAPPDATA%\abraid\modelwrapper will be used
# cache.data.dir=/some/directory

# Uncomment this to specify an R executable path
# By default /usr/bin/R or %R_HOME%\bin\R.exe will be used
# r.executable.path=/some/executable/for/R

# Uncomment this to specify a maximum model run duration (in ms)
# By default MAX_INT (2^{31} -1) will be used (just less than 25 days)
# r.max.duration=86400000 # 24h

# Uncomment this in test scenarios to skip execution of the real model
# By default the model will not be skipped
model.dry.run=true

# Uncomment this to specify the maximum number of CPUs the model should use (up to 64)
# By default 64 will be used
# model.max.cpu=64

# Uncomment this to specify whether the model code should print verbose messages
# By default they will not be written
# model.verbose=true

# Uncomment this to specify the raster files to use for admin 1 & admin 2 locations (GAUL codes as pixel values)
# By default ${cache.data.dir}/rasters/admin1qc.tif & ${cache.data.dir}/rasters/admin2qc.tif will be used
# raster.file.admin1=/some/path/for/geotiff.tif
# raster.file.admin2=/some/path/for/geotiff.tif

# Uncomment this to specify the raster files to use for global & tropical disease extent creation (GAUL codes as pixel values)
# By default ${cache.data.dir}/rasters/admin_global.tif & ${cache.data.dir}/rasters/admin_tropical.tif will be used
# raster.file.global=/some/path/for/geotiff.tif
# raster.file.tropical=/some/path/for/geotiff.tif

# The credentials used to log into the ModelWrapper web site
# The hash method is BCrypt
auth.username=username
auth.password_hash=$2a$10$yzKgitCB6ghjvbQ7TjfhsOPcx/2j2EOQA2EMM8SIEsHfxhFhFM7TG

# The URL and version of the model R code that ModelWrapper will wrap
model.repo.url=https://github.com/laurence-hudson-tessella/seegSDM.git
model.repo.version=test

# The ModelOutputHandler URL
# For security, HTTPS must be used in production (as we are using HTTP Basic Auth). A new api key should also be generated.
model.output.api.key=key-to-access-model-output
model.output.handler.protocol=http
model.output.handler.host=localhost:8080
model.output.handler.path=/modeloutputhandler
model.output.handler.root.url=${model.output.handler.protocol}://api:${model.output.api.key}@${model.output.handler.host}${model.output.handler.path}

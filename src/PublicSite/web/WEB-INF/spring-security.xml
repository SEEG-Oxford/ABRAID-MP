<?xml version="1.0" encoding="UTF-8"?>
<!--
    Spring security beans specification.
    Copyright (c) 2014 University of Oxford
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Define Authentication Filter and Entry Point, instead of using form login or basic authentication -->
    <security:http auto-config="false" entry-point-ref="http403EntryPoint" authentication-manager-ref="authenticationManager">
        <!-- Use custom Authentication Filter (bean below) instead of default, at this position in the Filter Chain -->
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter" />
        <security:custom-filter position="REMEMBER_ME_FILTER" ref="rememberMeFilter" />
        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" />
    </security:http>

    <!-- The Filter Entry Point bean: failed auths should give 403  -->
    <bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

    <!-- The Authentication Manager bean from http ref, and its sub-beans -->
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg name="providers">
            <list>
                <ref bean="daoAuthenticationProvider" />
                <ref bean="rememberMeAuthenticationProvider" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="passwordEncoder" /> <!-- defined in applicationContext -->
    </bean>

    <bean id="userDetailsService" class="uk.ac.ox.zoo.seeg.abraid.mp.publicsite.security.UserDetailsServiceImpl"
                autowire="constructor"/>

    <!-- The Authentication Filter bean from http custom-filter tag -->
    <bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <property name="authenticationFailureHandler" ref="failureHandler"/>
        <property name="authenticationSuccessHandler" ref="successHandler"/>
        <property name="rememberMeServices" ref="rememberMeServices" />
    </bean>

    <!-- Define custom handlers to return JSON with status and error message, instead of default redirect -->
    <bean id="successHandler" class="uk.ac.ox.zoo.seeg.abraid.mp.publicsite.security.AjaxAuthenticationSuccessHandler"/>

    <bean id="failureHandler" class=" uk.ac.ox.zoo.seeg.abraid.mp.publicsite.security.AjaxAuthenticationFailureHandler" />

    <!-- Persistent session remember me service -->
    <bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
        <constructor-arg name="authenticationManager" ref="authenticationManager" />
        <constructor-arg name="rememberMeServices" ref="rememberMeServices" />
    </bean>

    <bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg name="userDetailsService" ref="userDetailsService" />
        <constructor-arg name="tokenRepository" ref="persistentSessionTokenRepository" />
        <constructor-arg name="key" value="c660ae168" />
        <property name="alwaysRemember" value="true" />
        <property name="tokenValiditySeconds" value="1209600" />
    </bean>

    <bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
        <constructor-arg name="key" value="c660ae168" />
    </bean>

    <bean id="persistentSessionTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Logout handler -->
    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg name="logoutSuccessUrl" value="/"/>
        <constructor-arg name="handlers">
            <list>
                <ref bean="rememberMeServices"/>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
                    <property name="invalidateHttpSession" value="true" />
                    <property name="clearAuthentication" value="true" />
                </bean>
                <bean class="org.springframework.security.web.authentication.logout.CookieClearingLogoutHandler">
                    <constructor-arg name="cookiesToClear">
                        <array>
                            <value>JSESSIONID</value>
                            <value>SPRING_SECURITY_REMEMBER_ME_COOKIE</value>
                        </array>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>
</beans>
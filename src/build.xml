<?xml version="1.0" encoding="UTF-8"?>
<!--
      Ant build file collating the targets for all submodules of ABRAID-MP.
      Copyright (c) 2014 University of Oxford
-->
<project name="abraid-mp_src" default="build">

  <!-- Common -->
  <property name="module.common.dir" value="${basedir}/Common"/>
  <target name="module.common.build">
    <ant antfile="${module.common.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.common.dir}"/>
  </target>
  <target name="module.common.clean">
    <ant antfile="${module.common.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.common.dir}"/>
  </target>
  <target name="module.common.quality">
    <ant antfile="${module.common.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.common.dir}"/>
  </target>
  <target name="module.common.test">
    <ant antfile="${module.common.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.common.dir}"/>
  </target>
  <target name="module.common.full">
    <ant antfile="${module.common.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.common.dir}"/>
  </target>

  <!-- DataAcquisition -->
  <property name="module.dataacquisition.dir" value="${basedir}/DataAcquisition"/>
  <target name="module.dataacquisition.build">
    <ant antfile="${module.dataacquisition.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.dataacquisition.dir}"/>
  </target>
  <target name="module.dataacquisition.clean">
    <ant antfile="${module.dataacquisition.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.dataacquisition.dir}"/>
  </target>
  <target name="module.dataacquisition.quality">
    <ant antfile="${module.dataacquisition.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.dataacquisition.dir}"/>
  </target>
  <target name="module.dataacquisition.test">
    <ant antfile="${module.dataacquisition.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.dataacquisition.dir}"/>
  </target>
  <target name="module.dataacquisition.full">
    <ant antfile="${module.dataacquisition.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.dataacquisition.dir}"/>
  </target>

  <!-- DataManager -->
  <property name="module.datamanager.dir" value="${basedir}/DataManager"/>
  <target name="module.datamanager.build">
    <ant antfile="${module.datamanager.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.datamanager.dir}"/>
  </target>
  <target name="module.datamanager.clean">
    <ant antfile="${module.datamanager.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.datamanager.dir}"/>
  </target>
  <target name="module.datamanager.quality">
    <ant antfile="${module.datamanager.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.datamanager.dir}"/>
  </target>
  <target name="module.datamanager.test">
    <ant antfile="${module.datamanager.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.datamanager.dir}"/>
  </target>
  <target name="module.datamanager.full">
    <ant antfile="${module.datamanager.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.datamanager.dir}"/>
  </target>

  <!-- CommonWeb -->
  <property name="module.commonweb.dir" value="${basedir}/CommonWeb"/>
  <target name="module.commonweb.quality">
    <ant antfile="${module.commonweb.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality.js" dir="${module.commonweb.dir}"/>
  </target>
  <target name="module.commonweb.test">
    <ant antfile="${module.commonweb.dir}/build.xml" inheritrefs="false" inheritall="false" target="unit.test.js" dir="${module.commonweb.dir}"/>
  </target>
  <target name="module.commonweb.full">
    <ant antfile="${module.commonweb.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.commonweb.dir}"/>
  </target>

  <!-- PublicSite -->
  <property name="module.publicsite.dir" value="${basedir}/PublicSite"/>
  <target name="module.publicsite.build">
    <ant antfile="${module.publicsite.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.publicsite.dir}"/>
  </target>
  <target name="module.publicsite.clean">
    <ant antfile="${module.publicsite.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.publicsite.dir}"/>
  </target>
  <target name="module.publicsite.quality">
    <ant antfile="${module.publicsite.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.publicsite.dir}"/>
  </target>
  <target name="module.publicsite.test">
    <ant antfile="${module.publicsite.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.publicsite.dir}"/>
  </target>
  <target name="module.publicsite.full">
    <ant antfile="${module.publicsite.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.publicsite.dir}"/>
  </target>

  <!-- ModelWrapper -->
  <property name="module.modelwrapper.dir" value="${basedir}/ModelWrapper"/>
  <target name="module.modelwrapper.build">
    <ant antfile="${module.modelwrapper.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.modelwrapper.dir}"/>
  </target>
  <target name="module.modelwrapper.clean">
    <ant antfile="${module.modelwrapper.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.modelwrapper.dir}"/>
  </target>
  <target name="module.modelwrapper.quality">
    <ant antfile="${module.modelwrapper.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.modelwrapper.dir}"/>
  </target>
  <target name="module.modelwrapper.test">
    <ant antfile="${module.modelwrapper.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.modelwrapper.dir}"/>
  </target>
  <target name="module.modelwrapper.full">
    <ant antfile="${module.modelwrapper.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.modelwrapper.dir}"/>
  </target>

  <!-- ModelOutputHandler -->
  <property name="module.modeloutputhandler.dir" value="${basedir}/ModelOutputHandler"/>
  <target name="module.modeloutputhandler.build">
    <ant antfile="${module.modeloutputhandler.dir}/build.xml" inheritrefs="false" inheritall="false" target="build" dir="${module.modeloutputhandler.dir}"/>
  </target>
  <target name="module.modeloutputhandler.clean">
    <ant antfile="${module.modeloutputhandler.dir}/build.xml" inheritrefs="false" inheritall="false" target="clean" dir="${module.modeloutputhandler.dir}"/>
  </target>
  <target name="module.modeloutputhandler.quality">
    <ant antfile="${module.modeloutputhandler.dir}/build.xml" inheritrefs="false" inheritall="false" target="check.quality" dir="${module.modeloutputhandler.dir}"/>
  </target>
  <target name="module.modeloutputhandler.test">
    <ant antfile="${module.modeloutputhandler.dir}/build.xml" inheritrefs="false" inheritall="false" target="run.tests" dir="${module.modeloutputhandler.dir}"/>
  </target>
  <target name="module.modeloutputhandler.full">
    <ant antfile="${module.modeloutputhandler.dir}/build.xml" inheritrefs="false" inheritall="false" target="full" dir="${module.modeloutputhandler.dir}"/>
  </target>

  <!-- Targets -->
  <target name="clean" depends="module.common.clean, module.dataacquisition.clean, module.datamanager.clean, module.publicsite.clean, module.modelwrapper.clean, module.modeloutputhandler.clean" description="cleanup all"/>
  <target name="build" depends="module.common.build, module.dataacquisition.build, module.datamanager.build, module.publicsite.build, module.modelwrapper.build, module.modeloutputhandler.build" description="build all modules"/>
  <target name="quality" depends="module.common.quality, module.dataacquisition.quality, module.datamanager.quality, module.commonweb.quality, module.publicsite.quality, module.modelwrapper.quality, module.modeloutputhandler.quality" description="check quality of all modules"/>
  <target name="test" depends="build, module.common.test, module.dataacquisition.test, module.datamanager.test, module.commonweb.test, module.publicsite.test, module.modelwrapper.test, module.modeloutputhandler.test" description="test all modules"/>
  <target name="full" depends="module.common.full, module.dataacquisition.full, module.datamanager.full, module.commonweb.full, module.publicsite.full, module.modelwrapper.full, module.modeloutputhandler.full" description="build pipeline" />
</project>